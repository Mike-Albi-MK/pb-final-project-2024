***PROJECT OVERVIEW***

***DAY 1***

– project topic chosen, I'm gonna stick with the Pokemon task
– readme.md studied to understand project scope and requirements
– dummy file setup, and solutions.js created to present finished code

***Progress**

– classes setup, constructors defined and mandatory functions attempted in code
– minor details had to be included, code runs in terminal, readme.md study works

------------------------------------------------------------------------------------------------------------------------------------

***DAY 2***

– research for Pokemon characters and attacks done
– new Pokemon added as classes to solutions.js, with damage and magic points
– the same goes for new attackskills

***Progress***

– coding went rather smoothly but terminal always threw an error when I tried to push updates

------------------------------------------------------------------------------------------------------------------------------------

***DAY 3***

– new Pokemon class added
– skills cleaned up, each character now has specific skills and attacks (classes intertwine)
– readline-sync installed and imported to solution.js, commands added to code for playability on terminal and
more engaging player experience

------------------------------------------------------------------------------------------------------------------------------------

***DAY 4***

– code problems: inner logic of battle was a lot to tackle, defined number of rounds didn't run as supposed to,
only one blow could be dealt, matches ended prematurely
– stats didn't not print on terminal during matches, inner logic of loops needed to be fixed

------------------------------------------------------------------------------------------------------------------------------------

***DAY 5***

– pickung up where I left the progress on day 4, two new js-files where created to seperate code trials from main branch of
work
– finally the code/terminal acted accordingly to my requests
– now all implementations should be mirrored when typing orders

***Progress***

– code debugging the most difficult part and most time consuming
– analyzing inner logic and destructuring the logic of command lines can cause headaches
